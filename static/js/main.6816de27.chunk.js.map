{"version":3,"sources":["components/totalBlock.jsx","components/total.jsx","components/common/toggler.jsx","fakeSocialMediaAPI.js","components/overviewBlockViews.jsx","components/overviewBlockLikes.jsx","components/overviewBlock.jsx","components/overview.jsx","components/dashboard.jsx","App.js","index.js"],"names":["TotalBlock","props","value","dataBlock","darkMode","className","title","borderClass","blockBorderClass","iconClass","console","log","renderIcon","name","totalFollowers","Math","floor","lastValue","currentValue","trend","textClass","Fragment","followCurrent","renderToday","followLast","Total","data","map","elem","Toggler","onToggle","type","onChange","socialMediaData","viewsCurrent","viewsLast","likesCurrent","likesLast","OverviewBlockViews","renderValue","renderTrend","renderTitleText","OverviewBlockLikes","OverviewBlock","Overview","abs","Dashboard","state","handleToggle","newMode","setState","countTotalFollowers","reduce","accumulator","toString","replace","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6816de27.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst TotalBlock = (props) => {\r\n  const { dataBlock, darkMode } = props;\r\n  //console.log(data);\r\n\r\n  const renderIcon = (title) => {\r\n    let iconClass = \"icon \";\r\n\r\n    switch (title) {\r\n      case \"facebook\":\r\n        iconClass += \"icon-fb\";\r\n        break;\r\n      case \"instagram\":\r\n        iconClass += \"icon-insta\";\r\n        break;\r\n      case \"twitter\":\r\n        iconClass += \"icon-twtr\";\r\n        break;\r\n      case \"youtube\":\r\n        iconClass += \"icon-yt\";\r\n        break;\r\n      default:\r\n    }\r\n    console.log(iconClass);\r\n    return <i className={iconClass} />;\r\n  };\r\n\r\n  const renderValue = (value) => {\r\n    if (value >= 10000) {\r\n      return `${Math.floor(value / 1000)}k`;\r\n    }\r\n    return value;\r\n  };\r\n\r\n  const renderToday = (lastValue, currentValue) => {\r\n    const trend = currentValue - lastValue;\r\n    let iconClass = \"icon icon-up\";\r\n    let textClass = \"up-color\";\r\n    iconClass = trend < 0 ? \"icon icon-down\" : iconClass;\r\n    textClass = trend < 0 ? \"down-color\" : textClass;\r\n    return (\r\n      <React.Fragment>\r\n        <i className={iconClass} />\r\n        <span className={textClass}>{dataBlock.followCurrent} Today</span>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const blockBorderClass = (title) => {\r\n    const borderClass = \"totalblock\";\r\n    switch (title) {\r\n      case \"facebook\":\r\n        return borderClass + \" totalblock-fb\";\r\n      case \"twitter\":\r\n        return borderClass + \" totalblock-twtr\";\r\n      case \"instagram\":\r\n        return \"totalblock-insta\";\r\n      case \"youtube\":\r\n        return borderClass + \" totalblock-yt\";\r\n      default:\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        blockBorderClass(dataBlock.title) +\r\n        (darkMode ? \" card_dark\" : \" card_light\")\r\n      }>\r\n      <div className={\"totalblock_name dashboard_dark_secondarytext\"}>\r\n        {renderIcon(dataBlock.title)}\r\n        <span>{dataBlock.name}</span>\r\n      </div>\r\n      <div\r\n        className={\r\n          darkMode\r\n            ? \"totalBlock-mainvalue dashboard_dark_maintext\"\r\n            : \"totalBlock-mainvalue dashboard_light_maintext\"\r\n        }>\r\n        {renderValue(dataBlock.totalFollowers)}\r\n      </div>\r\n      <div className=\"totalblock-followers dashboard_dark_secondarytext\">\r\n        {dataBlock.title === \"youtube\" ? \"SUBSCRIBERS\" : \"FOLLOWERS\"}\r\n      </div>\r\n      <div className=\"trend\">\r\n        {renderToday(dataBlock.followLast, dataBlock.followCurrent)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TotalBlock;\r\n","import React from \"react\";\r\nimport TotalBlock from \"./totalBlock\";\r\n\r\nconst Total = (props) => {\r\n  const { data, darkMode } = props;\r\n  return (\r\n    <div className=\"total\">\r\n      <div className=\"total-grid\">\r\n        {data.map((elem) => {\r\n          return <TotalBlock dataBlock={elem} darkMode={darkMode} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Total;\r\n","import React from \"react\";\r\nimport \"./toggler.css\";\r\n\r\nconst Toggler = ({ darkMode, onToggle }) => {\r\n  return (\r\n    <div className=\"toggle\">\r\n      {\" \"}\r\n      <span>Dark Mode</span>\r\n      <label className=\"switch\">\r\n        <input type=\"checkbox\" onChange={() => onToggle()} />\r\n        <span\r\n          className={\r\n            darkMode ? \"slider round dark\" : \"slider round light\"\r\n          }></span>\r\n      </label>{\" \"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toggler;\r\n","const socialMediaData = [\r\n  {\r\n    title: \"facebook\",\r\n    name: \"@nathanf\",\r\n    totalFollowers: 1987,\r\n    followCurrent: 12,\r\n    followLast: 11,\r\n    viewsCurrent: 87,\r\n    viewsLast: 84,\r\n    likesCurrent: 52,\r\n    likesLast: 53,\r\n  },\r\n  {\r\n    title: \"twitter\",\r\n    name: \"@nathanf\",\r\n    totalFollowers: 1044,\r\n    followCurrent: 99,\r\n    followLast: 90,\r\n    viewsCurrent: 117,\r\n    viewsLast: 29,\r\n    likesCurrent: 507,\r\n    likesLast: 77,\r\n  },\r\n  {\r\n    title: \"instagram\",\r\n    name: \"@realnathanf\",\r\n    totalFollowers: 11734,\r\n    followCurrent: 1099,\r\n    followLast: 956,\r\n    viewsCurrent: 52375,\r\n    viewsLast: 3550,\r\n    likesCurrent: 5462,\r\n    likesLast: 232,\r\n  },\r\n  {\r\n    title: \"youtube\",\r\n    name: \"Nathan F.\",\r\n    totalFollowers: 8239,\r\n    followCurrent: 144,\r\n    followLast: 169,\r\n    viewsCurrent: 1407,\r\n    viewsLast: 1590,\r\n    likesCurrent: 107,\r\n    likesLast: 132,\r\n  },\r\n];\r\n\r\nexport function getData() {\r\n  return socialMediaData;\r\n}\r\n","import React from \"react\";\r\n\r\nconst OverviewBlockViews = (props) => {\r\n  const { dataBlock, darkMode, renderIcon, renderValue, renderTrend } = props;\r\n\r\n  const renderTitleText = (title) => {\r\n    switch (title) {\r\n      case \"facebook\":\r\n        return \"Page Views\";\r\n      case \"twitter\":\r\n        return \"Retweets\";\r\n      case \"instagram\":\r\n        return \"Profile Views\";\r\n      case \"youtube\":\r\n        return \"Total Views\";\r\n      default:\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        darkMode\r\n          ? \"overviewblock-views subblock card_dark\"\r\n          : \"overviewblock-views subblock card_light\"\r\n      }>\r\n      <div className=\"overviewblock-views-title_text dashboard_dark_secondarytext\">\r\n        {renderTitleText(dataBlock.title)}\r\n      </div>\r\n      <div className=\"overviewblock-views-title_icon\">\r\n        {renderIcon(dataBlock.title)}\r\n      </div>\r\n\r\n      <div\r\n        className={\r\n          darkMode\r\n            ? \"overviewblock-views-data_value dashboard_dark_maintext\"\r\n            : \"overviewblock-views-data_value dashboard_light_maintext\"\r\n        }>\r\n        {renderValue(dataBlock.viewsCurrent)}\r\n      </div>\r\n      <div className=\"overviewblock-views-data_trend trend\">\r\n        {renderTrend(dataBlock.viewsLast, dataBlock.viewsCurrent)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OverviewBlockViews;\r\n","import React from \"react\";\r\n\r\nconst OverviewBlockLikes = (props) => {\r\n  const { dataBlock, darkMode, renderIcon, renderValue, renderTrend } = props;\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        darkMode\r\n          ? \"overviewblock-likes subblock card_dark\"\r\n          : \"overviewblock-likes subblock card_light\"\r\n      }>\r\n      <div className=\"overviewblock-likes-title_text dashboard_dark_secondarytext\">\r\n        Likes\r\n      </div>\r\n      <div className=\"overviewblock-likes-title_icon\">\r\n        {\" \"}\r\n        {renderIcon(dataBlock.title)}\r\n      </div>\r\n      <div\r\n        className={\r\n          darkMode\r\n            ? \"overviewblock-likes-data_value dashboard_dark_maintext\"\r\n            : \"overviewblock-likes-data_value dashboard_light_maintext\"\r\n        }>\r\n        {renderValue(dataBlock.likesCurrent)}\r\n      </div>\r\n      <div className=\"overviewblock-likes-data_trend trend\">\r\n        {renderTrend(dataBlock.likesLast, dataBlock.likesCurrent)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OverviewBlockLikes;\r\n","import React from \"react\";\r\nimport OverviewBlockViews from \"./overviewBlockViews\";\r\nimport OverviewBlockLikes from \"./overviewBlockLikes\";\r\n\r\nconst OverviewBlock = (props) => {\r\n  const { dataBlock, darkMode, renderIcon, renderValue, renderTrend } = props;\r\n\r\n  const renderBlock = (title) => {\r\n    if (title === \"instagram\" || title === \"youtube\") {\r\n      return (\r\n        <div className=\"overviewblock\">\r\n          <OverviewBlockLikes\r\n            dataBlock={dataBlock}\r\n            darkMode={darkMode}\r\n            renderIcon={renderIcon}\r\n            renderValue={renderValue}\r\n            renderTrend={renderTrend}\r\n          />\r\n\r\n          <OverviewBlockViews\r\n            dataBlock={dataBlock}\r\n            darkMode={darkMode}\r\n            renderIcon={renderIcon}\r\n            renderValue={renderValue}\r\n            renderTrend={renderTrend}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"overviewblock\">\r\n          <OverviewBlockViews\r\n            dataBlock={dataBlock}\r\n            darkMode={darkMode}\r\n            renderIcon={renderIcon}\r\n            renderValue={renderValue}\r\n            renderTrend={renderTrend}\r\n          />\r\n\r\n          <OverviewBlockLikes\r\n            dataBlock={dataBlock}\r\n            darkMode={darkMode}\r\n            renderIcon={renderIcon}\r\n            renderValue={renderValue}\r\n            renderTrend={renderTrend}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return renderBlock(dataBlock.title);\r\n};\r\n\r\nexport default OverviewBlock;\r\n","import React from \"react\";\r\nimport OverviewBlock from \"./overviewBlock\";\r\n\r\nconst Overview = (props) => {\r\n  const { data, darkMode } = props;\r\n\r\n  const renderIcon = (title) => {\r\n    let iconClass = \"icon \";\r\n\r\n    switch (title) {\r\n      case \"facebook\":\r\n        iconClass += \"icon-fb\";\r\n        break;\r\n      case \"instagram\":\r\n        iconClass += \"icon-insta\";\r\n        break;\r\n      case \"twitter\":\r\n        iconClass += \"icon-twtr\";\r\n        break;\r\n      case \"youtube\":\r\n        iconClass += \"icon-yt\";\r\n        break;\r\n      default:\r\n    }\r\n    return <i className={iconClass} />;\r\n  };\r\n\r\n  const renderValue = (value) => {\r\n    if (value >= 10000) {\r\n      return `${Math.floor(value / 1000)}k`;\r\n    }\r\n    return value;\r\n  };\r\n\r\n  const renderTrend = (lastValue, currentValue) => {\r\n    const trend = Math.floor((currentValue / lastValue) * 100) - 100;\r\n    let iconClass = \"icon icon-up\";\r\n    let textClass = \"up-color\";\r\n    iconClass = trend < 0 ? \"icon icon-down\" : iconClass;\r\n    textClass = trend < 0 ? \"down-color\" : textClass;\r\n    return (\r\n      <React.Fragment>\r\n        <i className={iconClass} />\r\n        <span className={textClass}>{Math.abs(trend)}%</span>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"overview\">\r\n      {\" \"}\r\n      <h2\r\n        className={\r\n          darkMode ? \"dashboard_dark_maintext\" : \"dashboard_light_maintext\"\r\n        }>\r\n        Overview - Today\r\n      </h2>\r\n      <div className=\"overview-grid\">\r\n        {\" \"}\r\n        {data.map((elem) => (\r\n          <OverviewBlock\r\n            dataBlock={elem}\r\n            darkMode={darkMode}\r\n            renderIcon={renderIcon}\r\n            renderValue={renderValue}\r\n            renderTrend={renderTrend}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Overview;\r\n","import React, { Component } from \"react\";\r\nimport Total from \"./total\";\r\nimport Toggler from \"./common/toggler\";\r\nimport { getData } from \"./../fakeSocialMediaAPI\";\r\nimport Overview from \"./overview\";\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    socialMediaData: getData(),\r\n    darkMode: true,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(\"Construction of Dashboard\");\r\n  }\r\n\r\n  handleToggle = () => {\r\n    let newMode = !this.state.darkMode;\r\n    this.setState({ darkMode: newMode });\r\n  };\r\n\r\n  countTotalFollowers = (data) => {\r\n    let result = data.reduce((accumulator, currentValue) => {\r\n      return accumulator + currentValue.totalFollowers;\r\n    }, 0);\r\n    //returns result with formatting: adding commas between thousands\r\n    return result.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\r\n  };\r\n\r\n  render() {\r\n    //console.log(this.state.socialMediaData);\r\n    const { darkMode, socialMediaData } = this.state;\r\n    return (\r\n      <main\r\n        className={\r\n          darkMode ? \"dashboard dashboard_dark\" : \"dashboard dashboard_light\"\r\n        }>\r\n        <div className=\"dashboard-title\">\r\n          <div className=\"dashboard-title_title\">\r\n            {\" \"}\r\n            <h1\r\n              className={\r\n                darkMode\r\n                  ? \"dashboard_dark_maintext\"\r\n                  : \"dashboard_light_maintext\"\r\n              }>\r\n              Social Media Dashboard\r\n            </h1>\r\n            <h3 className=\"dashboard_dark_secondarytext\">\r\n              {`Total Followers: ${this.countTotalFollowers(socialMediaData)}`}\r\n            </h3>\r\n          </div>\r\n          <Toggler darkMode={darkMode} onToggle={this.handleToggle} />\r\n        </div>\r\n        <Total data={socialMediaData} darkMode={darkMode} />\r\n        <Overview data={socialMediaData} darkMode={darkMode} />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\nimport Dashboard from \"./components/dashboard\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <React.Fragment>\n      <Dashboard />\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}